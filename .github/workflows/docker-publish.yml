name: 🐳 Build and Publish Docker Packages

on:
  # Trigger on release
  release:
    types: [published]
  
  # Trigger on push to main branch
  push:
    branches: 
      - main
    paths:
      - 'app/**'
      - 'docker-compose.yml'
      - '.github/workflows/docker-publish.yml'
  
  # Manual trigger
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_BACKEND: ${{ github.repository }}/backend
  IMAGE_NAME_BOT: ${{ github.repository }}/bot

jobs:
  build-backend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔐 Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 📋 Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🏗️ Build and push Backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./app
          file: ./app/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-bot:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔐 Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 📋 Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BOT }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🏗️ Build and push Bot Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./app/bot
          file: ./app/bot/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  update-docker-compose:
    runs-on: ubuntu-latest
    needs: [build-backend, build-bot]
    if: github.event_name == 'release'
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔄 Update docker-compose.yml with package images
        run: |
          # Extract version from release tag
          VERSION=${GITHUB_REF#refs/tags/}
          
          # Update docker-compose.yml to use GitHub packages
          sed -i "s|build:|#build:|g" docker-compose.yml
          sed -i "s|context: ./app|#context: ./app|g" docker-compose.yml
          sed -i "s|dockerfile: Dockerfile|#dockerfile: Dockerfile|g" docker-compose.yml
          
          # Add image references
          sed -i "/services:/,/backend:/ { /backend:/a\\    image: ghcr.io/${{ github.repository }}/backend:${VERSION}" docker-compose.yml
          sed -i "/bot:/a\\    image: ghcr.io/${{ github.repository }}/bot:${VERSION}" docker-compose.yml
          
          # Create production docker-compose file
          cp docker-compose.yml docker-compose.prod.yml

      - name: 📤 Commit updated docker-compose files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add docker-compose.prod.yml
          git commit -m "🐳 Add production docker-compose with GitHub packages" || exit 0
          git push || exit 0
